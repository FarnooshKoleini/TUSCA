function [idx,wvi,xi] = sel_range(wv,z);%  SEL_RANGE - get subrange of wavelengths from mouse clicks%%  [idx,wvi,xi] = sel_range(wv,x);%% This function plots a series of vectors in X against wv % and then accepts two grahpical clicks% from the mouse to define a subsets of ranges.%% A double click resets the plot.%% The ENTER or RETURN key terminates the function.disp('Click desired end points to select wavelength ranges.');disp('Double click mouse to reset plot.');disp('Hit ENTER or RETURN to end.');if nargin < 2,    z = wv;    [r,c] = size(z);    wv = 1:c;end[r,c] = size(z);transp = 0;if length(wv) ~= r,    z = z';    transp = 1;end;[r,c] = size(z');[rs,cs] = size(wv);if rs > cs, wv = wv'; cs = rs; end;if (cs ~= c),    error('wv and x must have same number of rows or columns.');endplot(wv,z,'-'); hold on;h_ax=gca;axis('tight');idx = zeros(cs,1);[x,y]=ginput(2);axes(h_ax);[w(1),ia]=min(abs(wv-x(1))); % find closest wvlns[w(2),ib]=min(abs(wv-x(2)));ix(1) = min(ia,ib); % make sure they are arranged in correct orderix(2) = max(ia,ib);while length(x)==2,    [w(1),ia]=min(abs(wv-x(1))); % find closest wvlns    [w(2),ib]=min(abs(wv-x(2)));        if  ia == ib, % double mouse click?        clf        plot(wv,z,'-'); hold on; % yes, reset plot        h_ax=gca;        axis('tight');        idx = zeros(r,1);    else            ix(1) = min(ia,ib); % make sure they are arranged in correct order        ix(2) = max(ia,ib);        idx(ix(1):ix(2)) = 1; % record position of selected wvlns                fprintf('\n\n      start        stop');        fprintf('\nidx:  %7g  %7g\nx:  %9.4g  %9.4g\ny:  %9.4g  %9.4g',ix,x,y);        fprintf('\n');        ax = axis;        if r == 1,            h=fill([wv(ix(1)) wv(ix(1):ix(2)) wv(ix(2))],[ax(3) (z(ix(1):ix(2),:)') ax(3)],'r');        else,           h=fill([wv(ix(1)) wv(ix(1):ix(2)) wv(ix(2))],[ax(3) max(z(ix(1):ix(2),:)') ax(3)],'r');        end;            end;        [x,y]=ginput(2); % get another click    axes(h_ax);end;hold off;idx = find(idx==1);wvi = wv(idx);if transp == 1,    xi = z(idx,:)';else    xi = z(idx,:);end